#include "def.h"
//======================================================================================================================
char prob_mat[16][4] = { {'0','1','2','3'} , {'0','1','2','3'} , {'0','1','2','3'} , {'3','0','1','2'} ,
						 {'2','3','0','1'} , {'2','3','0','1'} , {'2','3','0','1'} , {'3','0','1','2'} ,
						 {'0','1','2','3'} , {'0','1','2','3'} , {'0','1','2','3'} , {'3','0','1','2'} ,
						 {'2','0','3','1'} , {'2','0','3','1'} , {'2','0','3','1'} , {'3','0','1','2'} };
//======================================================================================================================
void fill_map(map<string, char*> & m)
{
	for(int i=0; i<16; i++)
	{
		//make the prob array for (Si-Sj):
		char* arr = new char[4];
		arr[0]=prob_mat[i][0]; arr[1]=prob_mat[i][1]; arr[2]=prob_mat[i][2]; arr[3]=prob_mat[i][3];
		//form the string "ij":
		string s = "";
		if(i<4)
		{
			s += '0';
			s += 0x30 + i;
		}
		else if(i<8)
		{
				s += '1';
				s += 0x30 + (i-4);
		}
		else if(i<12)
		{
			s += '2';
			s += 0x30 + (i-8);
		}
		else
		{
			s += '3';
			s += 0x30 + (i-12);
		}
		//insert the new pair into the prob map:
		m.insert(pair<string, char*>(s, arr));
	}
}
//======================================================================================================================